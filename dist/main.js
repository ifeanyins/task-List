/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/creatingProject.js":
/*!********************************!*\
  !*** ./src/creatingProject.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HideAddTaskBtn: () => (/* binding */ HideAddTaskBtn),\n/* harmony export */   createEventlistener: () => (/* binding */ createEventlistener),\n/* harmony export */   createSpanIcon: () => (/* binding */ createSpanIcon),\n/* harmony export */   projectList: () => (/* binding */ projectList),\n/* harmony export */   saveToLocalStorage: () => (/* binding */ saveToLocalStorage)\n/* harmony export */ });\n/* harmony import */ var _creatingTask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./creatingTask */ \"./src/creatingTask.js\");\n/* harmony import */ var _homeSection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./homeSection */ \"./src/homeSection.js\");\n\r\n// import { revertEditFormLocation } from \"./editingTask\";\r\n// import { revertOptionLocation } from \"./editingProject\";\r\n// import { dragStartEndEvent } from \"./dragAndDrop\";\r\n\r\nconst createEventlistener = () =>{\r\n    // event listener for creating a form for adding projects\r\n    const cancel = document.querySelector('.projectCancelBtn');\r\n    cancel.addEventListener('click', hideProjectForm);\r\n\r\n    const add = document.querySelector('.add-Project');\r\n    add.addEventListener('click', showProjectForm);\r\n\r\n    const submit = document.getElementById('projectForm');\r\n    submit.addEventListener('submit', processProjectInput);\r\n\r\n    const leftPanel = document.querySelector('.leftPanel');\r\n    leftPanel.addEventListener('click', checkTile);\r\n\r\n    displayProject(projectList);\r\n}\r\n// get project list of objects from the local Storage or []\r\nlet defaultProjectList = [];\r\nlet projectList = localStorage.getItem('myProjectList');\r\nprojectList = JSON.parse(projectList || JSON.stringify(defaultProjectList));\r\n\r\n// save project and last id data on local storage\r\nfunction saveToLocalStorage(){\r\n    localStorage.setItem('myProjectList', JSON.stringify(projectList)); //the right hand side should be input.value, we use project list to push the now created input.value in the procces func\r\n    localStorage.setItem(\"currentId\", (_creatingTask__WEBPACK_IMPORTED_MODULE_0__.id).toString());\r\n}\r\n\r\n// find next data-set (to locate the next tile)\r\nfunction findNextDataset(){\r\n    const allProjects = document.querySelectorAll('[data-project]'); // we would use this data project to target all the newly created project and locate the clicked tile / the next tile\r\n    return allProjects.length;\r\n}\r\n\r\nfunction showProjectForm(){\r\n    const projectForm = document.querySelector('#projectForm');\r\n    projectForm.classList.remove('hidden');\r\n}\r\nconst hideProjectForm = () => {\r\n    const projectForm = document.querySelector('#projectForm');\r\n    const projectInput = document.querySelector('#projectInput');\r\n\r\n    projectInput.value = \"\";\r\n    projectForm.classList.add(\"hidden\");\r\n}\r\n\r\n// Create project factory function\r\nfunction createProject(dataProject, name){\r\n    const taskList = [];\r\n    const taskNum = taskList.length;\r\n    return{\r\n        dataProject,\r\n        name,\r\n        taskList,\r\n        taskNum\r\n    }\r\n}\r\n\r\n// process the input and prepare to create element project\r\nfunction processProjectInput(e){\r\n    let dataProject = findNextDataset();\r\n    let projectName = document.getElementById(\"projectInput\").value;\r\n    const newProject = createProject(dataProject, projectName); //this new project function was created to make joining the id and project content possible\r\n\r\n    // push the item to local storage using project list\r\n    projectList.push(newProject); //project list can access this function because it was created outside the scope\r\n    saveToLocalStorage();\r\n\r\n    addProject(dataProject, projectName); //add project function was used to create the structure and arrange it in desired order including the icons also\r\n    hideProjectForm();\r\n    e.preventDefault();\r\n}\r\n\r\n// create a span icon of google material icons\r\nconst createSpanIcon = (name) => {\r\n    const icon = document.createElement('span'); \r\n    icon.classList.add(\"material-icons-round\");\r\n    icon.textContent = name; // i call my icons from google fonts, (you need a class containing the font and span containing the name)\r\n    return icon;\r\n}\r\n\r\n// create a project and add it to the lst of projects in html\r\nconst addProject = (dataProject, textInput) => {\r\n    const project = document.querySelector('.projects'); //used to target the main project head for inserion of the form\r\n    const form = document.querySelector('#projectForm'); //to insert the form\r\n\r\n    const container = document.createElement('div');\r\n    container.setAttribute('data-project', `${dataProject}`);\r\n    container.classList.add('tile');\r\n    project.insertBefore(container, form); //insert the menu icon before the project name\r\n\r\n    // menu three lines icon\r\n    const menuIcon = createSpanIcon('menu'); // using the span icon to give it a name then adding the corresponding class \r\n    menuIcon.classList.add(\"material-symbols-outlined\");\r\n    menuIcon.setAttribute('data-drag', '');\r\n    container.appendChild(menuIcon);\r\n    // name and number status (div for the project name)\r\n    const projectInfo = document.createElement('div');\r\n    projectInfo.classList.add('projectInfo');\r\n    container.appendChild(projectInfo);\r\n\r\n    const projectName = document.createElement('div');\r\n    projectName.classList.add('projectName');\r\n    projectName.textContent = textInput;\r\n    projectInfo.appendChild(projectName);\r\n    \r\n    //three dots on the right\r\n    const editdiv = document.createElement('div');\r\n    editdiv.classList.add('editContainer');\r\n    editdiv.setAttribute(\"data-dropdown\", \"\");\r\n    container.appendChild(editdiv);\r\n    // call function to create a span icon from google, cause i'm a bit lazy\r\n    const editIcon = createSpanIcon(\"more_vert\"); // the google icons for three dots\r\n    editIcon.classList.add(\"material-symbols-outlined\");\r\n    editIcon.setAttribute(\"data-dropdown-button\",\"\");\r\n    editdiv.appendChild(editIcon);\r\n}\r\n\r\n// display the list of all projects in the left panel\r\nconst displayProject = (arr) =>{\r\n    arr.forEach(project => {\r\n        addProject(project.dataProject, project.name);\r\n    });\r\n}\r\n\r\n// dislay the add task btn when the project tile is selected\r\nfunction showaddTaskBtn(){\r\n    const addTaskBtn = document.querySelector('.addList');\r\n    addTaskBtn.classList.remove('hidden');\r\n}\r\n// hide the add task btn when the home tile is selected\r\nfunction HideAddTaskBtn(){\r\n    const addTaskBtn = document.querySelector('.addList');\r\n    addTaskBtn.classList.add('hidden');\r\n}\r\n\r\n// check to see what tile is selected\r\nfunction checkTile(e){\r\n    let homeTile = e.target.closest(\".home .tile\");\r\n    let projectTile = e.target.closest(\"projects .tile\");\r\n    if(homeTile != null){\r\n        const title = homeTile.querySelector(\"[data-name]\");\r\n        selectTile(homeTile);\r\n        // revertOptionLocatioin();\r\n        (0,_homeSection__WEBPACK_IMPORTED_MODULE_1__.checkWhichHomeTile)(homeTile);\r\n        (0,_creatingTask__WEBPACK_IMPORTED_MODULE_0__.updateTitle)(title); \r\n        HideAddTaskBtn();\r\n    }else if(projectTile != null){\r\n        const title = projectTile.querySelector(\".projectName\"); //relate to the project on top\r\n        let dataProject = projectTile.dataset.project; \r\n\r\n        // revertEditFormLocation();\r\n        // revertOptionLocation();\r\n\r\n        (0,_creatingTask__WEBPACK_IMPORTED_MODULE_0__.displayTask)(dataProject);\r\n        selectTile(projectTile);\r\n        (0,_creatingTask__WEBPACK_IMPORTED_MODULE_0__.updateTitle)(title); //adding the project textcontent to the title\r\n        showaddTaskBtn();\r\n    }else {\r\n        return;\r\n    }\r\n}\r\n\r\n// when selecting a tile from left panel apply css\r\nconst selectTile = (node) =>{\r\n    const selectedTile = document.querySelector('.selected');\r\n    selectedTile.classList.remove('selected'); //remove class selected from old title\r\n\r\n    node.classList.add('selected'); //add class selected to current title\r\n}\r\n\n\n//# sourceURL=webpack://task-list/./src/creatingProject.js?");

/***/ }),

/***/ "./src/creatingTask.js":
/*!*****************************!*\
  !*** ./src/creatingTask.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTask: () => (/* binding */ addTask),\n/* harmony export */   displayTask: () => (/* binding */ displayTask),\n/* harmony export */   id: () => (/* binding */ id),\n/* harmony export */   listEvent: () => (/* binding */ listEvent),\n/* harmony export */   processDateData: () => (/* binding */ processDateData),\n/* harmony export */   updateTitle: () => (/* binding */ updateTitle)\n/* harmony export */ });\n/* harmony import */ var _creatingProject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./creatingProject */ \"./src/creatingProject.js\");\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\r\n\r\n\r\n\r\n\r\nfunction listEvent(){\r\n    const addList = document.querySelector(\"#addList\");\r\n    addList.addEventListener(\"click\", showListForm);\r\n\r\n    const listCancel = document.querySelector(\".listCancelBtn\");\r\n    listCancel.addEventListener(\"click\", hideListForm);\r\n\r\n    const listSubmit = document.getElementById(\"listForm\");\r\n    listSubmit.addEventListener(\"submit\", processListInput);\r\n\r\n    const todoList = document.querySelector(\".list-todo\");\r\n    todoList.addEventListener(\"click\", checkListEvent);\r\n}\r\n\r\nconst CreateTask = (dataProject,id,title, details, completed, important, date) => {\r\n    return{\r\n        dataProject,\r\n        id,\r\n        title,\r\n        details,\r\n        completed: completed,\r\n        important: important,\r\n        date:date\r\n    }\r\n}\r\n\r\nfunction checkListEvent(e){\r\n    let isStarIcon = e.target.matches(\".star-outline\");\r\n    let isCircleIcon = e.target.matches(\".unchecked\");\r\n\r\n    let isEditSubmitBtn = e.target.matches(\".editTaskSubmitBtn\");\r\n    let isEditTaskCancel = e.target.matches(\".editTaskCancelBtn\");\r\n\r\n    let isDeleteBtn = e.target.matches(\"#listDelete\");\r\n    let isEditBtn = e.target.matches(\"#listEdit\");\r\n\r\n    if(isStarIcon){\r\n        Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(e);\r\n        Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(e);\r\n    }\r\n    else if(isCircleIcon){\r\n        Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(e);\r\n        Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(e);\r\n    }\r\n    else if(isDeleteBtn){\r\n        Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(e);\r\n    }\r\n    else if(isEditBtn){\r\n      Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(e);\r\n    }\r\n    else if(isEditSubmitBtn){\r\n      Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(e);\r\n    }\r\n    else if(isEditBtn){\r\n      Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())();\r\n      Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())();\r\n    }\r\n    else if(isEditTaskCancel){\r\n        Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())();\r\n        Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './editingTask'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())();\r\n    }\r\n    else{\r\n        return;\r\n    }\r\n}\r\n\r\n//  pop up the add task form\r\nconst showListForm = () => {\r\n    const listForm = document.querySelector(\"#listForm\");\r\n    listForm.classList.remove(\"hidden\");\r\n    document.getElementById(\"listInput\").focus();\r\n}\r\n\r\n// hide add-task-form\r\nconst hideListForm = () => {\r\n    const listForm = document.querySelector(\"#listForm\");\r\n    const listInput = document.querySelector(\"#listInput\");\r\n    const listInputDetail = document.querySelector(\"#listInputDetail\");\r\n    const dateInput = document.querySelector(\"#listInputDate\");\r\n\r\n    listInput.value = \"\";\r\n    listInputDetail.value = \"\";\r\n    dateInput.value = \"\";\r\n    listForm.classList.add(\"hidden\");\r\n}\r\n\r\n// get id from a local storage or get a default one\r\nlet defaultId = 0;\r\nlet id = Number(localStorage.getItem(\"currentId\")) || defaultId;\r\n\r\n// processing data froma add task\r\nfunction processListInput(e){\r\n    let title = document.getElementById(\"listInput\").value;\r\n    let details = document.getElementById(\"listInputDetail\").value;\r\n    let dateInput = document.getElementById(\"listInput\").value;\r\n\r\n    let dataProject = findCurrentDataProject();\r\n    let date = processDateData(dateInput);\r\n    let listId = id;\r\n\r\n    const newTask = CreateTask(dataProject, listId, title, details, false, false, date);\r\n    _creatingProject__WEBPACK_IMPORTED_MODULE_0__.projectList[dataProject].taskList.push(newTask);\r\n    id++;\r\n    (0,_creatingProject__WEBPACK_IMPORTED_MODULE_0__.saveToLocalStorage)();\r\n\r\n    addTask(listId, title, details, date);\r\n    hideListForm();\r\n    e.preventDefault();\r\n}\r\n\r\n// process date input function\r\nfunction processDateData(date){\r\n    let formattedDate;\r\n    if(!date){\r\n        formattedDate = \"No Due Date\";\r\n    }\r\n    else{\r\n        formattedDate = date;\r\n    }\r\n    return formattedDate;\r\n}\r\n\r\n// display all the task in a project\r\nfunction displayTask(dataProject){\r\n    const ul = document.querySelector(\"ul\");\r\n    ul.textContent = \"\";\r\n    _creatingProject__WEBPACK_IMPORTED_MODULE_0__.projectList[dataProject].taskList.forEach(task => {\r\n        addTask(task.id, task.title, task.details, task.date, task.completed, task.important);\r\n    });\r\n}\r\n\r\n// create the task into HTML\r\nfunction addTask(listId, title, details, date, completed, important){\r\n    const ul = document.querySelector(\"ul\");\r\n    const li = document.createElement(\"li\");\r\n    li.id = listId;\r\n    ul.appendChild(li);\r\n\r\n    const unchecked = document.createElement(\"div\");\r\n    unchecked.classList.add(\"unchecked\");\r\n    li.appendChild(unchecked);\r\n\r\n    const listDetails = document.createElement(\"div\");\r\n    listDetails.classList.add(\"list-details\");\r\n    li.appendChild(unchecked);\r\n\r\n    if(completed){\r\n        unchecked.classList.toggle(\"checked\");\r\n        listDetails.classList.toggle(\"lineThrough\");\r\n        listDetails.classList.toggle(\"fade\");\r\n    }\r\n    else{\r\n        star.classList.classList.add(\"listHidden\")\r\n    }\r\n\r\n    const editContainer = document.createElement('div');\r\n    editContainer.dataset.dropdon = \"\";\r\n    editContainer.classList.add(\"editContainer\");\r\n    listRight.appendChild(editContainer);\r\n\r\n    const threeDots = (0,_creatingProject__WEBPACK_IMPORTED_MODULE_0__.createSpanIcon)(\"more_vert\");\r\n    threeDots.dataset.dropdownButton = \"\";\r\n    editContainer.appendChild(threeDots);\r\n}\r\n\r\n// update the title of the content (right panel heading)\r\nfunction updateTitle(nameNode){\r\n    const title = document.querySelector(\".title\");\r\n    title.textContent = nameNode.textContent;\r\n}\r\n\r\n// function to find the data-project index when adding new tasks\r\nfunction findCurrentDataProject(){\r\n    const selected = document.querySelector(\".selected\");\r\n    return selected.dataset.project;\r\n}\r\n\r\n\n\n//# sourceURL=webpack://task-list/./src/creatingTask.js?");

/***/ }),

/***/ "./src/homeSection.js":
/*!****************************!*\
  !*** ./src/homeSection.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkWhichHomeTile: () => (/* binding */ checkWhichHomeTile),\n/* harmony export */   displayAllTasks: () => (/* binding */ displayAllTasks)\n/* harmony export */ });\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module 'date-fns/parseISO'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module 'date-fns'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n/* harmony import */ var _creatingProject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./creatingProject */ \"./src/creatingProject.js\");\n\r\n\r\n\r\n\r\n\r\nfunction checkWhichHomeTile(homeTile){\r\n    if(homeTile.matches(\"#alltasks\")){\r\n        displayAllTasks();\r\n    }\r\n    else if(homeTile.matches(\"#today\")){\r\n        displayToday();\r\n    }\r\n    else if(homeTile.matches(\"#week\")){\r\n        displayThisWeek();\r\n    }\r\n    else if(homeTile.matches(\"#important\")){\r\n        displayImportant();\r\n    }\r\n}\r\n\r\nfunction clearContent(){\r\n    const ul = document.querySelector(\"ul\");\r\n    ul.textContent = \"\";\r\n}\r\n\r\nfunction showNoTask(){\r\n    const ul = document.querySelector(\"ul\");\r\n    const div = document.createElement(\"div\");\r\n    div.classList.add(\"noTask\");\r\n    div.textContent = \"Yay! No Tasks\";\r\n    ul.appendChild(div);\r\n}\r\n\r\nfunction checkNoTask(){\r\n    const ul = document.querySelector(\"ul\");\r\n    if(ul.textContent === \"\"){\r\n        showNoTask();\r\n    }else{\r\n        return;\r\n    }\r\n}\r\n// display all tasks\r\nfunction displayAllTasks(){\r\n    clearContent();\r\n    _creatingProject__WEBPACK_IMPORTED_MODULE_1__.projectList.forEach(project => {\r\n        project.taskList.forEach(task => {\r\n            (0,_creatingProject__WEBPACK_IMPORTED_MODULE_1__.HideAddTaskBtn)(task.id, task.title, task.details, task.date, task.completed, task.important);\r\n        });\r\n        (0,_creatingProject__WEBPACK_IMPORTED_MODULE_1__.HideAddTaskBtn)();\r\n        checkNoTask();\r\n    });\r\n}\r\n\r\n// display todays tasks\r\nfunction displayToday(){\r\n    clearContent();\r\n    let today = Date.parse(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'date-fns'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(new Date(), \"yyyy-MM-dd\")); //parse for comparison and format so it has the same format before parsing it\r\n    _creatingProject__WEBPACK_IMPORTED_MODULE_1__.projectList.forEach(project => {\r\n        project.taskList.forEach(task => {\r\n            let date = Date.parse(task.date);\r\n            if(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'date-fns'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(date,today)){\r\n                addTask(task.id,task.title, task.details, task.date,task.completed, task.important);\r\n            }else {\r\n                return;\r\n            }\r\n        });\r\n        checkNoTask();\r\n    });\r\n}\r\nfunction displayThisWeek(){\r\n    clearContent();\r\n    _creatingProject__WEBPACK_IMPORTED_MODULE_1__.projectList.forEach(project => {\r\n        project.taskList.forEach(task => {\r\n            let date = Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'date-fns/parseISO'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(task.date);\r\n            if(checkNextWeek(date)){\r\n                addTask(task.id,task.title, task.details, task.date,task.completed, task.important);\r\n            }\r\n            else{\r\n                return;\r\n            }\r\n        });\r\n        checkNoTask();      \r\n    });\r\n}\r\n// check if the date is within the interval of next week\r\nfunction checkNextWeek(taskDate){\r\n    let nextweekPlus1 = Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'date-fns'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(new Date(), 8);\r\n    // count the edges so plus 1\r\n    let today = new Date();\r\n    return Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'date-fns'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(taskDate,{\r\n        start: today,\r\n        end: nextweekPlus1\r\n    });\r\n}\r\n// display important tasks\r\nfunction displayImportant(){\r\n    clearContent();\r\n    _creatingProject__WEBPACK_IMPORTED_MODULE_1__.projectList.forEach(project => {\r\n        project.taskList.forEach(task => {\r\n            if(task.important){\r\n                addTask(task.id,task.title, task.details, task.date,task.completed, task.important);\r\n            }else {\r\n                return;\r\n            }\r\n        });\r\n    });\r\n    checkNoTask();\r\n}\r\n\r\n\n\n//# sourceURL=webpack://task-list/./src/homeSection.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _creatingProject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./creatingProject */ \"./src/creatingProject.js\");\n\r\n\r\n(0,_creatingProject__WEBPACK_IMPORTED_MODULE_0__.createEventlistener)();\r\n// menu button \r\nconst menuIcon = document.querySelector('.hamMenu')\r\nmenuIcon.addEventListener('click', ()=>{\r\n    const leftPanel = document.querySelector('.leftPanel');\r\n    leftPanel.classList.toggle(\"hidden\");\r\n})\r\n\r\n//on start up checked wether its on light mode or dark mode\r\nconst checkbox = document.getElementById(\"inputCbox\");\r\nif(checkbox.checked === true){\r\n    document.body.classList.add(\"light\");\r\n}\r\nelse{\r\n    document.body.classList.remove(\"light\");\r\n}\r\n\r\n//event listener for every time the dark mode toggle change\r\ncheckbox.addEventListener(\"change\", () =>{\r\n    document.body.classList.toggle(\"light\");\r\n})\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://task-list/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;